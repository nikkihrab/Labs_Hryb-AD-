import os
import glob
import datetime
import urllib.request
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st

# --- –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö ---
def download_data(province_id, year1=1981, year2=2024):
    data_folder = 'data'
    if not os.path.exists(data_folder):
        os.makedirs(data_folder)
    else:
        existing_files = [f for f in os.listdir(data_folder) if f.startswith(f'vhi_id__{province_id}__')]
        if existing_files:
            return  # –£–∂–µ —î —Ñ–∞–π–ª ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ

    url = f"https://www.star.nesdis.noaa.gov/smcd/emb/vci/VH/get_TS_admin.php?country=UKR&provinceID={province_id}&year1={year1}&year2={year2}&type=Mean"
    with urllib.request.urlopen(url) as response:
        data = response.read()

    current_datetime = datetime.datetime.now().strftime('%Y-%m-%d_%H-%M')
    filename = f'vhi_id__{province_id}__{current_datetime}.csv'
    file_path = os.path.join('data', filename)

    with open(file_path, 'wb') as out:
        out.write(data)

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –¥–ª—è –≤—Å—ñ—Ö 27 –æ–±–ª–∞—Å—Ç–µ–π
for i in range(1, 28):
    download_data(i)

# --- –û–±—Ä–æ–±–∫–∞ CSV-—Ñ–∞–π–ª—ñ–≤ —É —î–¥–∏–Ω–∏–π DataFrame ---
def create_data_frame(folder_path):
    csv_files = glob.glob(folder_path + "/*.csv")
    headers = ['Year', 'Week', 'SMN', 'SMT', 'VCI', 'TCI', 'VHI', 'empty']
    frames = []

    for file in csv_files:
        region_id = int(file.split('__')[1])
        df = pd.read_csv(file, header=1, names=headers)
        df.at[0, 'Year'] = df.at[0, 'Year'][9:]  # –í–∏–¥–∞–ª—è—î–º–æ 'year' –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
        df = df.drop(df.index[-1])  # –û—Å—Ç–∞–Ω–Ω—ñ–π —Ä—è–¥–æ–∫ ‚Äî –ø–æ—Ä–æ–∂–Ω—ñ–π
        df = df.drop(df.loc[df['VHI'] == -1].index)  # –§—ñ–ª—å—Ç—Ä—É—î–º–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
        df = df.drop('empty', axis=1)
        df.insert(0, 'region_id', region_id, True)
        df['Week'] = df['Week'].astype(int)
        frames.append(df)

    result = pd.concat(frames).drop_duplicates().reset_index(drop=True)
    result = result.loc[(result.region_id != 12) & (result.region_id != 20)]  # –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ö—Ä–∏–º —Ç–∞ –õ—É–≥–∞–Ω—Å—å–∫
    result = result.replace({'region_id': {
        1: 22, 2: 24, 3: 23, 4: 25, 5: 3, 6: 4, 7: 8, 8: 19, 9: 20, 10: 21,
        11: 9, 13: 10, 14: 11, 15: 12, 16: 13, 17: 14, 18: 15, 19: 16, 21: 17,
        22: 18, 23: 6, 24: 1, 25: 2, 26: 6, 27: 5}})
    return result

df = create_data_frame('./data')

reg_id_name = {
    1: '–í—ñ–Ω–Ω–∏—Ü—å–∫–∞', 2: '–í–æ–ª–∏–Ω—Å—å–∫–∞', 3: '–î–Ω—ñ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—Å—å–∫–∞', 4: '–î–æ–Ω–µ—Ü—å–∫–∞', 5: '–ñ–∏—Ç–æ–º–∏—Ä—Å—å–∫–∞',
    6: '–ó–∞–∫–∞—Ä–ø–∞—Ç—Å—å–∫–∞', 7: '–ó–∞–ø–æ—Ä—ñ–∑—å–∫–∞', 8: '–Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫–∞', 9: '–ö–∏—ó–≤—Å—å–∫–∞', 10: '–ö—ñ—Ä–æ–≤–æ–≥—Ä–∞–¥—Å—å–∫–∞',
    11: '–õ—É–≥–∞–Ω—Å—å–∫–∞', 12: '–õ—å–≤—ñ–≤—Å—å–∫–∞', 13: '–ú–∏–∫–æ–ª–∞—ó–≤—Å—å–∫–∞', 14: '–û–¥–µ—Å—å–∫–∞', 15: '–ü–æ–ª—Ç–∞–≤—Å—å–∫–∞',
    16: '–†—ñ–≤–µ–Ω—Å—å–∫–∞', 17: '–°—É–º—Å—å–∫–∞', 18: '–¢–µ—Ä–Ω–æ–ø—ñ–ª—å—Å—å–∫–∞', 19: '–•–∞—Ä–∫—ñ–≤—Å—å–∫–∞', 20: '–•–µ—Ä—Å–æ–Ω—Å—å–∫–∞',
    21: '–•–º–µ–ª—å–Ω–∏—Ü—å–∫–∞', 22: '–ß–µ—Ä–∫–∞—Å—å–∫–∞', 23: '–ß–µ—Ä–Ω—ñ–≤–µ—Ü—å–∫–∞', 24: '–ß–µ—Ä–Ω—ñ–≥—ñ–≤—Å—å–∫–∞', 25: '–†–µ—Å–ø—É–±–ª—ñ–∫–∞ –ö—Ä–∏–º'
}

# --- Streamlit –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å ---
st.title("–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞ 3: –ê–Ω–∞–ª—ñ–∑ —ñ–Ω–¥–µ–∫—Å—É –≤–µ–≥–µ—Ç–∞—Ü—ñ–π–Ω–æ–≥–æ –∑–¥–æ—Ä–æ–≤‚Äô—è (VHI)")

parameter = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä:", ["VCI", "TCI", "VHI"])
region_id = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –æ–±–ª–∞—Å—Ç—å:", sorted(df['region_id'].unique()), format_func=lambda x: reg_id_name.get(x, str(x)))
years_interval = st.text_input("–Ü–Ω—Ç–µ—Ä–≤–∞–ª —Ä–æ–∫—ñ–≤ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 2005-2020):", "1982-2024")
weeks_interval = st.text_input("–Ü–Ω—Ç–µ—Ä–≤–∞–ª —Ç–∏–∂–Ω—ñ–≤ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 1-3):", "1-3")

if st.button("–û–Ω–æ–≤–∏—Ç–∏"):
    year_start, year_end = map(int, years_interval.split('-'))
    week_start, week_end = map(int, weeks_interval.split('-'))

    filtered = df[
        (df['Year'].astype(int).between(year_start, year_end)) &
        (df['Week'].between(week_start, week_end)) &
        (df['region_id'] == region_id)
    ][['Year', 'Week', parameter]]

    st.subheader("üìä –¢–∞–±–ª–∏—Ü—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤")
    st.dataframe(filtered)

    if not filtered.empty:
        st.subheader("üìà –ì—Ä–∞—Ñ—ñ–∫")
        fig, axes = plt.subplots(2, 1, figsize=(12, 10))

        # –¢–µ–ø–ª–æ–≤–∞ –∫–∞—Ä—Ç–∞
        pivot = filtered.pivot(index='Year', columns='Week', values=parameter)
        sns.heatmap(pivot, cmap='inferno', annot=True, ax=axes[0])
        axes[0].set_title(f"–¢–µ–ø–ª–æ–≤–∞ –∫–∞—Ä—Ç–∞ {parameter} –ø–æ —Ä–æ–∫–∞—Ö —ñ —Ç–∏–∂–Ω—è—Ö")

        # –õ—ñ–Ω—ñ–π–Ω–∞ –¥—ñ–∞–≥—Ä–∞–º–∞
        for year in filtered['Year'].unique():
            data_year = filtered[filtered['Year'] == year]
            sns.lineplot(data=data_year, x='Week', y=parameter, ax=axes[1], label=str(year))

        axes[1].set_title(f"–î–∏–Ω–∞–º—ñ–∫–∞ {parameter} –∑–∞ —Ç–∏–∂–Ω—è–º–∏ –¥–ª—è –æ–±–ª–∞—Å—Ç—ñ: {reg_id_name[region_id]}")
        axes[1].set_xlabel("–¢–∏–∂–¥–µ–Ω—å")
        axes[1].set_ylabel(parameter)

        st.pyplot(fig)
    else:
        st.warning("‚ö†Ô∏è –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –≤–∏–±—Ä–∞–Ω–æ–≥–æ —ñ–Ω—Ç–µ—Ä–≤–∞–ª—É.")